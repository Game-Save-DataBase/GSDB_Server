import { OpenAPIV3 } from 'openapi-types';
export interface SchemaInterface {
    type?: string;
    format?: string;
    ref?: string;
    allOf?: SchemaInterface[];
    items?: SchemaInterface;
    properties?: {
        [name: string]: SchemaInterface;
    };
    getType?(): string | undefined;
    getFormat?(): string | undefined;
    getItems?(): SchemaInterface;
    getReference(): string | undefined;
    getAllOf?(): SchemaInterface[];
    getDefault?(): unknown;
    getEnum?(): unknown[];
}
export declare class Schema implements SchemaInterface {
    type?: string;
    format?: string;
    ref?: string;
    allOf?: SchemaInterface[];
    items?: SchemaInterface;
    properties?: {
        [name: string]: SchemaInterface;
    };
    defaultValue?: unknown;
    enum?: unknown[];
    /**
     * constructor
     *
     * @param {OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject} [schema=undefined]
     */
    constructor(schema?: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject);
    /**
     * @param {String} ref
     */
    setReference(ref: string): Schema;
    /**
     * @return {String}
     */
    getReference(): string | undefined;
    /**
     * @param {string} defaultValue
     * @return {*}  {Schema}
     * @memberof Schema
     */
    setDefault(defaultValue: unknown): Schema;
    setEnum(enumValues: unknown[]): Schema;
    /**
     * @param {({
     *     [name: string]: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject
     *   })} properties
     * @return {*}  {Schema}
     * @memberof Schema
     */
    setProperties(properties: {
        [name: string]: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject;
    }): Schema;
    /**
     * @param {String} type
     */
    setType(type: string | string[]): Schema;
    /**
     * @param {Array<Object>} allOf
     */
    setAllOf(allOf: (OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject)[]): Schema;
    /**
     * @param {String} format
     */
    setFormat(format: string): Schema;
    /**
     * @param {OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject} items
     */
    setItems(items: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject): this;
    /**
     * @return {String}
     */
    getType(): string | undefined;
    /**
     * @return {String}
     */
    getFormat(): string | undefined;
    /**
     * @return {Object}
     */
    getItems(): SchemaInterface;
    /**
     * @return {Array<Schema>}
     */
    getAllOf(): SchemaInterface[];
    getProperties(): {
        [name: string]: SchemaInterface;
    };
    getDefault(): unknown;
    getEnum(): unknown[];
}
